[gd_resource type="VisualShader" load_steps=8 format=2]

[sub_resource type="VisualShaderNodeVectorCompose" id=1]

[sub_resource type="VisualShaderNodeScalarOp" id=2]
default_input_values = [ 0, 1.0, 1, 0.0 ]
operator = 1

[sub_resource type="VisualShaderNodeInput" id=3]
input_name = "uv"

[sub_resource type="VisualShaderNodeTextureUniform" id=4]
uniform_name = "TextureUniform"

[sub_resource type="VisualShaderNodeVectorOp" id=5]
operator = 2

[sub_resource type="VisualShaderNodeScalarUniform" id=6]
uniform_name = "Power"

[sub_resource type="VisualShaderNodeVectorOp" id=7]
operator = 2

[resource]
code = "shader_type spatial;
uniform float Power;
uniform sampler2D TextureUniform;



void vertex() {
// Output:0

}

void fragment() {
// ScalarUniform:5
	float n_out5p0;
	n_out5p0 = Power;

// ScalarOp:12
	float n_in12p0 = 1.00000;
	float n_out12p0;
	n_out12p0 = n_in12p0 - n_out5p0;

// VectorCompose:11
	float n_in11p2 = 0.00000;
	vec3 n_out11p0;
	n_out11p0 = vec3( n_out5p0 , n_out12p0 , n_in11p2 );

// Input:2
	vec3 n_out2p0;
	n_out2p0 = vec3(UV,0.0);

// TextureUniform:3
	vec3 n_out3p0;
	float n_out3p1;
	{
		vec4 n_tex_read = texture( TextureUniform , n_out2p0.xy );
		n_out3p0 = n_tex_read.rgb;
		n_out3p1 = n_tex_read.a;
	}

// VectorOp:8
	vec3 n_out8p0;
	n_out8p0 = n_out11p0 * n_out3p0;

// VectorOp:4
	vec3 n_out4p0;
	n_out4p0 = n_out8p0 * n_out3p0;

// Output:0
	ALBEDO = n_out4p0;
	ALPHA = n_out3p1;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -429.195, 112.5 )
nodes/fragment/0/position = Vector2( 860, 380 )
nodes/fragment/2/node = SubResource( 3 )
nodes/fragment/2/position = Vector2( -300, 340 )
nodes/fragment/3/node = SubResource( 4 )
nodes/fragment/3/position = Vector2( -100, 260 )
nodes/fragment/4/node = SubResource( 5 )
nodes/fragment/4/position = Vector2( 480, 300 )
nodes/fragment/5/node = SubResource( 6 )
nodes/fragment/5/position = Vector2( -560, 160 )
nodes/fragment/8/node = SubResource( 7 )
nodes/fragment/8/position = Vector2( 300, 300 )
nodes/fragment/11/node = SubResource( 1 )
nodes/fragment/11/position = Vector2( -100, 160 )
nodes/fragment/12/node = SubResource( 2 )
nodes/fragment/12/position = Vector2( -300, 160 )
nodes/fragment/connections = PoolIntArray( 2, 0, 3, 0, 4, 0, 0, 0, 3, 1, 0, 1, 12, 0, 11, 1, 5, 0, 12, 1, 5, 0, 11, 0, 8, 0, 4, 0, 3, 0, 4, 1, 3, 0, 8, 1, 11, 0, 8, 0 )
